WEEK 1 REFLECT.TXT || ADAM STINZIANI 124521188
------------------------------------------------------------------------
In this workshop I've learned that the main() function can
receive arguments from the command line, and that identifiers
for variables can be accessed in other modules through external
linkage.
Lines of code that exemplify internal linkage are all lines of code
within all modules that do not begin with "#include" or "extern".
In contrast, only the lines of code that begin with "#include" or
"extern" in this assignment are examples of external linkage.
At first, the process function calls the constructor from the String
class I created, and then it calls the helper non-friend operator (<<)
of the String class.
I allocated dynamic memory so my string class could hold a string of
any size. This is best practice when you are unsure of the size your
variables must be. Also conforming to best practice, I added a ~String()
destructor that deallocates any memory upon destruction of a String
object.
------------------------------------------------------------------------
QUIZ REFLECTION
------------------------------------------------------------------------
2. Which on is better a wild pointer or nullptr why?
It is good style to initialize every wild pointer to nullptr
(ie. nullptr is better)
This is because a wild pointer has not been initialized and any run-time
attempt to dereference a wild pointer will generate erroneous results,
making debugging harder with no line of code to pin the problem down to.
------------------------------------------------------------------------
